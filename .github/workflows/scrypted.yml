name: Test Scrypted
on:
  workflow_dispatch:
    inputs:
      runner:
        required: true
        type: string
        default: ubuntu-24.04
      scrypted_version:
        required: true
        type: string
        default: latest
      server_address:
        required: false
        type: string
jobs:
  test:
    runs-on: ${{ inputs.runner }}
    
    steps:
      - name: Tailscale Linux
        if: ${{ runner.os == 'Linux' }}
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      - name: Tailscale MacOS
        if: ${{ runner.os == 'MacOS' }}
        run: |
          brew install tailscale coreutils

          sudo -E tailscaled --state=mem: 2>~/tailscaled.log &
          sudo -E tailscale status --json >/dev/null

          TAILSCALE_AUTHKEY="${{ secrets.TS_OAUTH_SECRET }}?preauthorized=true&ephemeral=true"
          TAGS_ARG="--advertise-tags=tag:ci"
          HOSTNAME="github-$(hostname)"
          timeout 5m sudo -E tailscale up ${TAGS_ARG} --authkey=${TAILSCALE_AUTHKEY} --hostname=${HOSTNAME} --accept-routes

      - name: Tailscale Windows
        if: ${{ runner.os == 'Windows' }}
        shell: bash
        run: |
          choco install tailscale

          tailscaled --state=mem: 2>~/tailscaled.log &
          tailscale status --json >/dev/null

          TAILSCALE_AUTHKEY="${{ secrets.TS_OAUTH_SECRET }}?preauthorized=true&ephemeral=true"
          TAGS_ARG="--advertise-tags=tag:ci"
          HOSTNAME="github-$(hostname)"

          tailscale up ${TAGS_ARG} --authkey=${TAILSCALE_AUTHKEY} --hostname=${HOSTNAME} --accept-routes

      - name: Set cluster envs
        shell: bash
        run: |
          mkdir -p ~/.scrypted/volume
          if [[ "${{ inputs.server_address }}" == "" ]]; then
            # Server mode
            echo "SCRYPTED_CLUSTER_MODE=server" >> ~/.scrypted/volume/.env
            echo "SCRYPTED_CLUSTER_ADDRESS=0.0.0.0" >> ~/.scrypted/volume/.env
            echo "SCRYPTED_CLUSTER_SECRET=swordfish123" >> ~/.scrypted/volume/.env
          else
            # Client mode
            echo "SCRYPTED_CLUSTER_MODE=client" >> ~/.scrypted/volume/.env
            echo "SCRYPTED_CLUSTER_SERVER=${{ inputs.server_address }}" >> ~/.scrypted/volume/.env
            echo "SCRYPTED_CLUSTER_SECRET=swordfish123" >> ~/.scrypted/volume/.env
            echo "SCRYPTED_CLUSTER_WORKER_NAME=$(hostname)" >> ~/.scrypted/volume/.env
          fi

      - name: Install scrypted server
        #uses: scryptedapp/setup-scrypted@v0.0.2
        uses: scryptedapp/setup-scrypted@main
        with:
          version: ${{ inputs.scrypted_version }}
          healthcheck: ${{ inputs.server_address == '' }}

      - name: Run establish a cf tunnel
        uses: vmactions/cf-tunnel@main
        with:
          protocol: http
          port: 11080

      - name: Wait to exit
        shell: bash
        run: |
          while [ ! -f ./continue ]; do sleep 5; done
